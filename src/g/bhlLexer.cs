//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from bhlLexer.g by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class bhlLexer : bhlLexerBase {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		IMPORT=1, NULL=2, FALSE=3, TRUE=4, IF=5, ELSE=6, WHILE=7, DO=8, FOR=9, 
		FOREACH=10, IN=11, BREAK=12, CONTINUE=13, RETURN=14, YIELD=15, AS=16, 
		IS=17, TYPEOF=18, NEW=19, PARAL=20, PARAL_ALL=21, DEFER=22, NAMESPACE=23, 
		CLASS=24, INTERFACE=25, ENUM=26, VIRTUAL=27, OVERRIDE=28, STATIC=29, CORO=30, 
		FUNC=31, REF=32, LOR=33, LAND=34, BOR=35, BAND=36, BNOT=37, INC=38, DEC=39, 
		SINC=40, SDEC=41, SMUL=42, SDIV=43, LT=44, LTE=45, GT=46, GTE=47, NEQ=48, 
		EQ=49, PLUS=50, MINUS=51, MUL=52, DIV=53, MOD=54, NOT=55, NAME=56, ARR=57, 
		GLOBAL=58, VARIADIC=59, ASSIGN=60, SEMI=61, COLON=62, DOT=63, OPEN_BRACKET=64, 
		CLOSE_BRACKET=65, OPEN_PAREN=66, CLOSE_PAREN=67, OPEN_BRACE=68, CLOSE_BRACE=69, 
		COMMA=70, QUESTION=71, NORMALSTRING=72, INT=73, HEX=74, FLOAT=75, SINGLE_LINE_COMMENT=76, 
		DELIMITED_COMMENT=77, WS=78, NL=79;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"IMPORT", "NULL", "FALSE", "TRUE", "IF", "ELSE", "WHILE", "DO", "FOR", 
		"FOREACH", "IN", "BREAK", "CONTINUE", "RETURN", "YIELD", "AS", "IS", "TYPEOF", 
		"NEW", "PARAL", "PARAL_ALL", "DEFER", "NAMESPACE", "CLASS", "INTERFACE", 
		"ENUM", "VIRTUAL", "OVERRIDE", "STATIC", "CORO", "FUNC", "REF", "LOR", 
		"LAND", "BOR", "BAND", "BNOT", "INC", "DEC", "SINC", "SDEC", "SMUL", "SDIV", 
		"LT", "LTE", "GT", "GTE", "NEQ", "EQ", "PLUS", "MINUS", "MUL", "DIV", 
		"MOD", "NOT", "NAME", "ARR", "GLOBAL", "VARIADIC", "ASSIGN", "SEMI", "COLON", 
		"DOT", "OPEN_BRACKET", "CLOSE_BRACKET", "OPEN_PAREN", "CLOSE_PAREN", "OPEN_BRACE", 
		"CLOSE_BRACE", "COMMA", "QUESTION", "NORMALSTRING", "INT", "HEX", "FLOAT", 
		"ExponentPart", "EscapeSequence", "Digit", "HexDigit", "SINGLE_LINE_COMMENT", 
		"DELIMITED_COMMENT", "WS", "NL"
	};


	public bhlLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public bhlLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'import'", "'null'", "'false'", "'true'", "'if'", "'else'", "'while'", 
		"'do'", "'for'", "'foreach'", "'in'", "'break'", "'continue'", "'return'", 
		"'yield'", "'as'", "'is'", "'typeof'", "'new'", "'paral'", "'paral_all'", 
		"'defer'", "'namespace'", "'class'", "'interface'", "'enum'", "'virtual'", 
		"'override'", "'static'", "'coro'", "'func'", "'ref'", "'||'", "'&&'", 
		"'|'", "'&'", "'~'", "'++'", "'--'", "'+='", "'-='", "'*='", "'/='", "'<'", 
		"'<='", "'>'", "'>='", "'!='", "'=='", "'+'", "'-'", "'*'", "'/'", "'%'", 
		"'!'", null, null, "'..'", "'...'", "'='", "';'", "':'", "'.'", "'['", 
		"']'", "'('", "')'", "'{'", "'}'", "','", "'?'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "IMPORT", "NULL", "FALSE", "TRUE", "IF", "ELSE", "WHILE", "DO", 
		"FOR", "FOREACH", "IN", "BREAK", "CONTINUE", "RETURN", "YIELD", "AS", 
		"IS", "TYPEOF", "NEW", "PARAL", "PARAL_ALL", "DEFER", "NAMESPACE", "CLASS", 
		"INTERFACE", "ENUM", "VIRTUAL", "OVERRIDE", "STATIC", "CORO", "FUNC", 
		"REF", "LOR", "LAND", "BOR", "BAND", "BNOT", "INC", "DEC", "SINC", "SDEC", 
		"SMUL", "SDIV", "LT", "LTE", "GT", "GTE", "NEQ", "EQ", "PLUS", "MINUS", 
		"MUL", "DIV", "MOD", "NOT", "NAME", "ARR", "GLOBAL", "VARIADIC", "ASSIGN", 
		"SEMI", "COLON", "DOT", "OPEN_BRACKET", "CLOSE_BRACKET", "OPEN_PAREN", 
		"CLOSE_PAREN", "OPEN_BRACE", "CLOSE_BRACE", "COMMA", "QUESTION", "NORMALSTRING", 
		"INT", "HEX", "FLOAT", "SINGLE_LINE_COMMENT", "DELIMITED_COMMENT", "WS", 
		"NL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "bhlLexer.g"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static bhlLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,79,573,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,1,0,1,0,1,0,1,0,
		1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,
		3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,
		1,7,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,11,
		1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,
		1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,
		1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,
		1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,
		1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,
		1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,
		1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,26,
		1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,
		1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,
		1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,33,1,33,
		1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,39,
		1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,44,
		1,44,1,44,1,45,1,45,1,46,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,48,1,49,
		1,49,1,50,1,50,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,5,55,
		419,8,55,10,55,12,55,422,9,55,1,56,1,56,1,56,1,57,1,57,1,57,1,58,1,58,
		1,58,1,58,1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,
		1,65,1,65,1,66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,71,
		1,71,5,71,461,8,71,10,71,12,71,464,9,71,1,71,1,71,1,72,4,72,469,8,72,11,
		72,12,72,470,1,73,1,73,1,73,4,73,476,8,73,11,73,12,73,477,1,74,4,74,481,
		8,74,11,74,12,74,482,1,74,1,74,5,74,487,8,74,10,74,12,74,490,9,74,1,74,
		3,74,493,8,74,1,74,1,74,4,74,497,8,74,11,74,12,74,498,1,74,3,74,502,8,
		74,1,74,4,74,505,8,74,11,74,12,74,506,1,74,1,74,3,74,511,8,74,1,75,1,75,
		3,75,515,8,75,1,75,4,75,518,8,75,11,75,12,75,519,1,76,1,76,1,76,1,76,3,
		76,526,8,76,1,76,3,76,529,8,76,1,77,1,77,1,78,1,78,1,79,1,79,1,79,1,79,
		5,79,539,8,79,10,79,12,79,542,9,79,1,79,1,79,1,80,1,80,1,80,1,80,5,80,
		550,8,80,10,80,12,80,553,9,80,1,80,1,80,1,80,1,80,1,80,1,81,4,81,561,8,
		81,11,81,12,81,562,1,81,1,81,1,82,4,82,568,8,82,11,82,12,82,569,1,82,1,
		82,1,551,0,83,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,
		25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,
		49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,
		73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,
		97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,
		59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,
		69,139,70,141,71,143,72,145,73,147,74,149,75,151,0,153,0,155,0,157,0,159,
		76,161,77,163,78,165,79,1,0,11,3,0,65,90,95,95,97,122,4,0,48,57,65,90,
		95,95,97,122,2,0,34,34,92,92,2,0,88,88,120,120,2,0,69,69,101,101,2,0,43,
		43,45,45,6,0,34,34,39,39,92,92,110,110,114,114,116,116,1,0,48,57,3,0,48,
		57,65,70,97,102,2,0,10,10,13,13,2,0,9,9,32,32,589,0,1,1,0,0,0,0,3,1,0,
		0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
		1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,
		0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,
		1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
		0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,
		1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,
		0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
		1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,
		0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,
		103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,
		113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,
		123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,
		133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,
		143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,159,1,0,0,0,0,
		161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,1,167,1,0,0,0,3,174,1,0,0,0,5,
		179,1,0,0,0,7,185,1,0,0,0,9,190,1,0,0,0,11,193,1,0,0,0,13,198,1,0,0,0,
		15,204,1,0,0,0,17,207,1,0,0,0,19,211,1,0,0,0,21,219,1,0,0,0,23,222,1,0,
		0,0,25,228,1,0,0,0,27,237,1,0,0,0,29,244,1,0,0,0,31,250,1,0,0,0,33,253,
		1,0,0,0,35,256,1,0,0,0,37,263,1,0,0,0,39,267,1,0,0,0,41,273,1,0,0,0,43,
		283,1,0,0,0,45,289,1,0,0,0,47,299,1,0,0,0,49,305,1,0,0,0,51,315,1,0,0,
		0,53,320,1,0,0,0,55,328,1,0,0,0,57,337,1,0,0,0,59,344,1,0,0,0,61,349,1,
		0,0,0,63,354,1,0,0,0,65,358,1,0,0,0,67,361,1,0,0,0,69,364,1,0,0,0,71,366,
		1,0,0,0,73,368,1,0,0,0,75,370,1,0,0,0,77,373,1,0,0,0,79,376,1,0,0,0,81,
		379,1,0,0,0,83,382,1,0,0,0,85,385,1,0,0,0,87,388,1,0,0,0,89,390,1,0,0,
		0,91,393,1,0,0,0,93,395,1,0,0,0,95,398,1,0,0,0,97,401,1,0,0,0,99,404,1,
		0,0,0,101,406,1,0,0,0,103,408,1,0,0,0,105,410,1,0,0,0,107,412,1,0,0,0,
		109,414,1,0,0,0,111,416,1,0,0,0,113,423,1,0,0,0,115,426,1,0,0,0,117,429,
		1,0,0,0,119,433,1,0,0,0,121,435,1,0,0,0,123,437,1,0,0,0,125,439,1,0,0,
		0,127,441,1,0,0,0,129,443,1,0,0,0,131,445,1,0,0,0,133,447,1,0,0,0,135,
		449,1,0,0,0,137,451,1,0,0,0,139,453,1,0,0,0,141,455,1,0,0,0,143,457,1,
		0,0,0,145,468,1,0,0,0,147,472,1,0,0,0,149,510,1,0,0,0,151,512,1,0,0,0,
		153,528,1,0,0,0,155,530,1,0,0,0,157,532,1,0,0,0,159,534,1,0,0,0,161,545,
		1,0,0,0,163,560,1,0,0,0,165,567,1,0,0,0,167,168,5,105,0,0,168,169,5,109,
		0,0,169,170,5,112,0,0,170,171,5,111,0,0,171,172,5,114,0,0,172,173,5,116,
		0,0,173,2,1,0,0,0,174,175,5,110,0,0,175,176,5,117,0,0,176,177,5,108,0,
		0,177,178,5,108,0,0,178,4,1,0,0,0,179,180,5,102,0,0,180,181,5,97,0,0,181,
		182,5,108,0,0,182,183,5,115,0,0,183,184,5,101,0,0,184,6,1,0,0,0,185,186,
		5,116,0,0,186,187,5,114,0,0,187,188,5,117,0,0,188,189,5,101,0,0,189,8,
		1,0,0,0,190,191,5,105,0,0,191,192,5,102,0,0,192,10,1,0,0,0,193,194,5,101,
		0,0,194,195,5,108,0,0,195,196,5,115,0,0,196,197,5,101,0,0,197,12,1,0,0,
		0,198,199,5,119,0,0,199,200,5,104,0,0,200,201,5,105,0,0,201,202,5,108,
		0,0,202,203,5,101,0,0,203,14,1,0,0,0,204,205,5,100,0,0,205,206,5,111,0,
		0,206,16,1,0,0,0,207,208,5,102,0,0,208,209,5,111,0,0,209,210,5,114,0,0,
		210,18,1,0,0,0,211,212,5,102,0,0,212,213,5,111,0,0,213,214,5,114,0,0,214,
		215,5,101,0,0,215,216,5,97,0,0,216,217,5,99,0,0,217,218,5,104,0,0,218,
		20,1,0,0,0,219,220,5,105,0,0,220,221,5,110,0,0,221,22,1,0,0,0,222,223,
		5,98,0,0,223,224,5,114,0,0,224,225,5,101,0,0,225,226,5,97,0,0,226,227,
		5,107,0,0,227,24,1,0,0,0,228,229,5,99,0,0,229,230,5,111,0,0,230,231,5,
		110,0,0,231,232,5,116,0,0,232,233,5,105,0,0,233,234,5,110,0,0,234,235,
		5,117,0,0,235,236,5,101,0,0,236,26,1,0,0,0,237,238,5,114,0,0,238,239,5,
		101,0,0,239,240,5,116,0,0,240,241,5,117,0,0,241,242,5,114,0,0,242,243,
		5,110,0,0,243,28,1,0,0,0,244,245,5,121,0,0,245,246,5,105,0,0,246,247,5,
		101,0,0,247,248,5,108,0,0,248,249,5,100,0,0,249,30,1,0,0,0,250,251,5,97,
		0,0,251,252,5,115,0,0,252,32,1,0,0,0,253,254,5,105,0,0,254,255,5,115,0,
		0,255,34,1,0,0,0,256,257,5,116,0,0,257,258,5,121,0,0,258,259,5,112,0,0,
		259,260,5,101,0,0,260,261,5,111,0,0,261,262,5,102,0,0,262,36,1,0,0,0,263,
		264,5,110,0,0,264,265,5,101,0,0,265,266,5,119,0,0,266,38,1,0,0,0,267,268,
		5,112,0,0,268,269,5,97,0,0,269,270,5,114,0,0,270,271,5,97,0,0,271,272,
		5,108,0,0,272,40,1,0,0,0,273,274,5,112,0,0,274,275,5,97,0,0,275,276,5,
		114,0,0,276,277,5,97,0,0,277,278,5,108,0,0,278,279,5,95,0,0,279,280,5,
		97,0,0,280,281,5,108,0,0,281,282,5,108,0,0,282,42,1,0,0,0,283,284,5,100,
		0,0,284,285,5,101,0,0,285,286,5,102,0,0,286,287,5,101,0,0,287,288,5,114,
		0,0,288,44,1,0,0,0,289,290,5,110,0,0,290,291,5,97,0,0,291,292,5,109,0,
		0,292,293,5,101,0,0,293,294,5,115,0,0,294,295,5,112,0,0,295,296,5,97,0,
		0,296,297,5,99,0,0,297,298,5,101,0,0,298,46,1,0,0,0,299,300,5,99,0,0,300,
		301,5,108,0,0,301,302,5,97,0,0,302,303,5,115,0,0,303,304,5,115,0,0,304,
		48,1,0,0,0,305,306,5,105,0,0,306,307,5,110,0,0,307,308,5,116,0,0,308,309,
		5,101,0,0,309,310,5,114,0,0,310,311,5,102,0,0,311,312,5,97,0,0,312,313,
		5,99,0,0,313,314,5,101,0,0,314,50,1,0,0,0,315,316,5,101,0,0,316,317,5,
		110,0,0,317,318,5,117,0,0,318,319,5,109,0,0,319,52,1,0,0,0,320,321,5,118,
		0,0,321,322,5,105,0,0,322,323,5,114,0,0,323,324,5,116,0,0,324,325,5,117,
		0,0,325,326,5,97,0,0,326,327,5,108,0,0,327,54,1,0,0,0,328,329,5,111,0,
		0,329,330,5,118,0,0,330,331,5,101,0,0,331,332,5,114,0,0,332,333,5,114,
		0,0,333,334,5,105,0,0,334,335,5,100,0,0,335,336,5,101,0,0,336,56,1,0,0,
		0,337,338,5,115,0,0,338,339,5,116,0,0,339,340,5,97,0,0,340,341,5,116,0,
		0,341,342,5,105,0,0,342,343,5,99,0,0,343,58,1,0,0,0,344,345,5,99,0,0,345,
		346,5,111,0,0,346,347,5,114,0,0,347,348,5,111,0,0,348,60,1,0,0,0,349,350,
		5,102,0,0,350,351,5,117,0,0,351,352,5,110,0,0,352,353,5,99,0,0,353,62,
		1,0,0,0,354,355,5,114,0,0,355,356,5,101,0,0,356,357,5,102,0,0,357,64,1,
		0,0,0,358,359,5,124,0,0,359,360,5,124,0,0,360,66,1,0,0,0,361,362,5,38,
		0,0,362,363,5,38,0,0,363,68,1,0,0,0,364,365,5,124,0,0,365,70,1,0,0,0,366,
		367,5,38,0,0,367,72,1,0,0,0,368,369,5,126,0,0,369,74,1,0,0,0,370,371,5,
		43,0,0,371,372,5,43,0,0,372,76,1,0,0,0,373,374,5,45,0,0,374,375,5,45,0,
		0,375,78,1,0,0,0,376,377,5,43,0,0,377,378,5,61,0,0,378,80,1,0,0,0,379,
		380,5,45,0,0,380,381,5,61,0,0,381,82,1,0,0,0,382,383,5,42,0,0,383,384,
		5,61,0,0,384,84,1,0,0,0,385,386,5,47,0,0,386,387,5,61,0,0,387,86,1,0,0,
		0,388,389,5,60,0,0,389,88,1,0,0,0,390,391,5,60,0,0,391,392,5,61,0,0,392,
		90,1,0,0,0,393,394,5,62,0,0,394,92,1,0,0,0,395,396,5,62,0,0,396,397,5,
		61,0,0,397,94,1,0,0,0,398,399,5,33,0,0,399,400,5,61,0,0,400,96,1,0,0,0,
		401,402,5,61,0,0,402,403,5,61,0,0,403,98,1,0,0,0,404,405,5,43,0,0,405,
		100,1,0,0,0,406,407,5,45,0,0,407,102,1,0,0,0,408,409,5,42,0,0,409,104,
		1,0,0,0,410,411,5,47,0,0,411,106,1,0,0,0,412,413,5,37,0,0,413,108,1,0,
		0,0,414,415,5,33,0,0,415,110,1,0,0,0,416,420,7,0,0,0,417,419,7,1,0,0,418,
		417,1,0,0,0,419,422,1,0,0,0,420,418,1,0,0,0,420,421,1,0,0,0,421,112,1,
		0,0,0,422,420,1,0,0,0,423,424,5,91,0,0,424,425,5,93,0,0,425,114,1,0,0,
		0,426,427,5,46,0,0,427,428,5,46,0,0,428,116,1,0,0,0,429,430,5,46,0,0,430,
		431,5,46,0,0,431,432,5,46,0,0,432,118,1,0,0,0,433,434,5,61,0,0,434,120,
		1,0,0,0,435,436,5,59,0,0,436,122,1,0,0,0,437,438,5,58,0,0,438,124,1,0,
		0,0,439,440,5,46,0,0,440,126,1,0,0,0,441,442,5,91,0,0,442,128,1,0,0,0,
		443,444,5,93,0,0,444,130,1,0,0,0,445,446,5,40,0,0,446,132,1,0,0,0,447,
		448,5,41,0,0,448,134,1,0,0,0,449,450,5,123,0,0,450,136,1,0,0,0,451,452,
		5,125,0,0,452,138,1,0,0,0,453,454,5,44,0,0,454,140,1,0,0,0,455,456,5,63,
		0,0,456,142,1,0,0,0,457,462,5,34,0,0,458,461,3,153,76,0,459,461,8,2,0,
		0,460,458,1,0,0,0,460,459,1,0,0,0,461,464,1,0,0,0,462,460,1,0,0,0,462,
		463,1,0,0,0,463,465,1,0,0,0,464,462,1,0,0,0,465,466,5,34,0,0,466,144,1,
		0,0,0,467,469,3,155,77,0,468,467,1,0,0,0,469,470,1,0,0,0,470,468,1,0,0,
		0,470,471,1,0,0,0,471,146,1,0,0,0,472,473,5,48,0,0,473,475,7,3,0,0,474,
		476,3,157,78,0,475,474,1,0,0,0,476,477,1,0,0,0,477,475,1,0,0,0,477,478,
		1,0,0,0,478,148,1,0,0,0,479,481,3,155,77,0,480,479,1,0,0,0,481,482,1,0,
		0,0,482,480,1,0,0,0,482,483,1,0,0,0,483,484,1,0,0,0,484,488,5,46,0,0,485,
		487,3,155,77,0,486,485,1,0,0,0,487,490,1,0,0,0,488,486,1,0,0,0,488,489,
		1,0,0,0,489,492,1,0,0,0,490,488,1,0,0,0,491,493,3,151,75,0,492,491,1,0,
		0,0,492,493,1,0,0,0,493,511,1,0,0,0,494,496,5,46,0,0,495,497,3,155,77,
		0,496,495,1,0,0,0,497,498,1,0,0,0,498,496,1,0,0,0,498,499,1,0,0,0,499,
		501,1,0,0,0,500,502,3,151,75,0,501,500,1,0,0,0,501,502,1,0,0,0,502,511,
		1,0,0,0,503,505,3,155,77,0,504,503,1,0,0,0,505,506,1,0,0,0,506,504,1,0,
		0,0,506,507,1,0,0,0,507,508,1,0,0,0,508,509,3,151,75,0,509,511,1,0,0,0,
		510,480,1,0,0,0,510,494,1,0,0,0,510,504,1,0,0,0,511,150,1,0,0,0,512,514,
		7,4,0,0,513,515,7,5,0,0,514,513,1,0,0,0,514,515,1,0,0,0,515,517,1,0,0,
		0,516,518,3,155,77,0,517,516,1,0,0,0,518,519,1,0,0,0,519,517,1,0,0,0,519,
		520,1,0,0,0,520,152,1,0,0,0,521,522,5,92,0,0,522,529,7,6,0,0,523,525,5,
		92,0,0,524,526,5,13,0,0,525,524,1,0,0,0,525,526,1,0,0,0,526,527,1,0,0,
		0,527,529,5,10,0,0,528,521,1,0,0,0,528,523,1,0,0,0,529,154,1,0,0,0,530,
		531,7,7,0,0,531,156,1,0,0,0,532,533,7,8,0,0,533,158,1,0,0,0,534,535,5,
		47,0,0,535,536,5,47,0,0,536,540,1,0,0,0,537,539,8,9,0,0,538,537,1,0,0,
		0,539,542,1,0,0,0,540,538,1,0,0,0,540,541,1,0,0,0,541,543,1,0,0,0,542,
		540,1,0,0,0,543,544,6,79,0,0,544,160,1,0,0,0,545,546,5,47,0,0,546,547,
		5,42,0,0,547,551,1,0,0,0,548,550,9,0,0,0,549,548,1,0,0,0,550,553,1,0,0,
		0,551,552,1,0,0,0,551,549,1,0,0,0,552,554,1,0,0,0,553,551,1,0,0,0,554,
		555,5,42,0,0,555,556,5,47,0,0,556,557,1,0,0,0,557,558,6,80,0,0,558,162,
		1,0,0,0,559,561,7,10,0,0,560,559,1,0,0,0,561,562,1,0,0,0,562,560,1,0,0,
		0,562,563,1,0,0,0,563,564,1,0,0,0,564,565,6,81,0,0,565,164,1,0,0,0,566,
		568,7,9,0,0,567,566,1,0,0,0,568,569,1,0,0,0,569,567,1,0,0,0,569,570,1,
		0,0,0,570,571,1,0,0,0,571,572,6,82,0,0,572,166,1,0,0,0,21,0,420,460,462,
		470,477,482,488,492,498,501,506,510,514,519,525,528,540,551,562,569,1,
		0,1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
