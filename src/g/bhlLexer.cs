//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from bhlLexer.g by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class bhlLexer : bhlLexerBase {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		IMPORT=1, NULL=2, FALSE=3, TRUE=4, IF=5, ELSE=6, WHILE=7, DO=8, FOR=9, 
		FOREACH=10, IN=11, BREAK=12, CONTINUE=13, RETURN=14, YIELD=15, AS=16, 
		IS=17, TYPEOF=18, NEW=19, PARAL=20, PARAL_ALL=21, DEFER=22, NAMESPACE=23, 
		CLASS=24, INTERFACE=25, ENUM=26, VIRTUAL=27, OVERRIDE=28, STATIC=29, CORO=30, 
		FUNC=31, REF=32, LOR=33, LAND=34, BOR=35, BAND=36, INC=37, DEC=38, SINC=39, 
		SDEC=40, SMUL=41, SDIV=42, LT=43, LTE=44, GT=45, GTE=46, NEQ=47, EQ=48, 
		PLUS=49, MINUS=50, MUL=51, DIV=52, MOD=53, NOT=54, NAME=55, ARR=56, GLOBAL=57, 
		VARIADIC=58, ASSIGN=59, SEMI=60, COLON=61, DOT=62, OPEN_BRACKET=63, CLOSE_BRACKET=64, 
		OPEN_PAREN=65, CLOSE_PAREN=66, OPEN_BRACE=67, CLOSE_BRACE=68, COMMA=69, 
		QUESTION=70, NORMALSTRING=71, INT=72, HEX=73, FLOAT=74, SINGLE_LINE_COMMENT=75, 
		DELIMITED_COMMENT=76, WS=77, NL=78;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"IMPORT", "NULL", "FALSE", "TRUE", "IF", "ELSE", "WHILE", "DO", "FOR", 
		"FOREACH", "IN", "BREAK", "CONTINUE", "RETURN", "YIELD", "AS", "IS", "TYPEOF", 
		"NEW", "PARAL", "PARAL_ALL", "DEFER", "NAMESPACE", "CLASS", "INTERFACE", 
		"ENUM", "VIRTUAL", "OVERRIDE", "STATIC", "CORO", "FUNC", "REF", "LOR", 
		"LAND", "BOR", "BAND", "INC", "DEC", "SINC", "SDEC", "SMUL", "SDIV", "LT", 
		"LTE", "GT", "GTE", "NEQ", "EQ", "PLUS", "MINUS", "MUL", "DIV", "MOD", 
		"NOT", "NAME", "ARR", "GLOBAL", "VARIADIC", "ASSIGN", "SEMI", "COLON", 
		"DOT", "OPEN_BRACKET", "CLOSE_BRACKET", "OPEN_PAREN", "CLOSE_PAREN", "OPEN_BRACE", 
		"CLOSE_BRACE", "COMMA", "QUESTION", "NORMALSTRING", "INT", "HEX", "FLOAT", 
		"ExponentPart", "EscapeSequence", "Digit", "HexDigit", "SINGLE_LINE_COMMENT", 
		"DELIMITED_COMMENT", "WS", "NL"
	};


	public bhlLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public bhlLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'import'", "'null'", "'false'", "'true'", "'if'", "'else'", "'while'", 
		"'do'", "'for'", "'foreach'", "'in'", "'break'", "'continue'", "'return'", 
		"'yield'", "'as'", "'is'", "'typeof'", "'new'", "'paral'", "'paral_all'", 
		"'defer'", "'namespace'", "'class'", "'interface'", "'enum'", "'virtual'", 
		"'override'", "'static'", "'coro'", "'func'", "'ref'", "'||'", "'&&'", 
		"'|'", "'&'", "'++'", "'--'", "'+='", "'-='", "'*='", "'/='", "'<'", "'<='", 
		"'>'", "'>='", "'!='", "'=='", "'+'", "'-'", "'*'", "'/'", "'%'", "'!'", 
		null, null, "'..'", "'...'", "'='", "';'", "':'", "'.'", "'['", "']'", 
		"'('", "')'", "'{'", "'}'", "','", "'?'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "IMPORT", "NULL", "FALSE", "TRUE", "IF", "ELSE", "WHILE", "DO", 
		"FOR", "FOREACH", "IN", "BREAK", "CONTINUE", "RETURN", "YIELD", "AS", 
		"IS", "TYPEOF", "NEW", "PARAL", "PARAL_ALL", "DEFER", "NAMESPACE", "CLASS", 
		"INTERFACE", "ENUM", "VIRTUAL", "OVERRIDE", "STATIC", "CORO", "FUNC", 
		"REF", "LOR", "LAND", "BOR", "BAND", "INC", "DEC", "SINC", "SDEC", "SMUL", 
		"SDIV", "LT", "LTE", "GT", "GTE", "NEQ", "EQ", "PLUS", "MINUS", "MUL", 
		"DIV", "MOD", "NOT", "NAME", "ARR", "GLOBAL", "VARIADIC", "ASSIGN", "SEMI", 
		"COLON", "DOT", "OPEN_BRACKET", "CLOSE_BRACKET", "OPEN_PAREN", "CLOSE_PAREN", 
		"OPEN_BRACE", "CLOSE_BRACE", "COMMA", "QUESTION", "NORMALSTRING", "INT", 
		"HEX", "FLOAT", "SINGLE_LINE_COMMENT", "DELIMITED_COMMENT", "WS", "NL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "bhlLexer.g"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static bhlLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,78,569,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,1,0,1,0,1,0,1,0,1,0,1,0,1,
		0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,
		1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,8,1,
		8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,
		1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,
		1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,
		1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,
		1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
		1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,
		1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,
		1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,
		1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,
		1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,30,1,30,
		1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,34,
		1,34,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,
		1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,43,1,43,1,43,1,44,1,44,
		1,45,1,45,1,45,1,46,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,49,1,49,1,50,
		1,50,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,5,54,415,8,54,10,54,12,54,
		418,9,54,1,55,1,55,1,55,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,58,1,58,1,
		59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,1,
		66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,70,5,70,457,8,70,10,
		70,12,70,460,9,70,1,70,1,70,1,71,4,71,465,8,71,11,71,12,71,466,1,72,1,
		72,1,72,4,72,472,8,72,11,72,12,72,473,1,73,4,73,477,8,73,11,73,12,73,478,
		1,73,1,73,5,73,483,8,73,10,73,12,73,486,9,73,1,73,3,73,489,8,73,1,73,1,
		73,4,73,493,8,73,11,73,12,73,494,1,73,3,73,498,8,73,1,73,4,73,501,8,73,
		11,73,12,73,502,1,73,1,73,3,73,507,8,73,1,74,1,74,3,74,511,8,74,1,74,4,
		74,514,8,74,11,74,12,74,515,1,75,1,75,1,75,1,75,3,75,522,8,75,1,75,3,75,
		525,8,75,1,76,1,76,1,77,1,77,1,78,1,78,1,78,1,78,5,78,535,8,78,10,78,12,
		78,538,9,78,1,78,1,78,1,79,1,79,1,79,1,79,5,79,546,8,79,10,79,12,79,549,
		9,79,1,79,1,79,1,79,1,79,1,79,1,80,4,80,557,8,80,11,80,12,80,558,1,80,
		1,80,1,81,4,81,564,8,81,11,81,12,81,565,1,81,1,81,1,547,0,82,1,1,3,2,5,
		3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
		33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,
		57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,
		81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,
		52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,
		62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,71,143,
		72,145,73,147,74,149,0,151,0,153,0,155,0,157,75,159,76,161,77,163,78,1,
		0,11,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,0,34,34,92,
		92,2,0,88,88,120,120,2,0,69,69,101,101,2,0,43,43,45,45,6,0,34,34,39,39,
		92,92,110,110,114,114,116,116,1,0,48,57,3,0,48,57,65,70,97,102,2,0,10,
		10,13,13,2,0,9,9,32,32,585,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,
		0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,
		19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
		0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,
		0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
		1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
		0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
		1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,
		0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,
		1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,
		0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,
		0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,
		0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,
		0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,
		0,0,0,0,147,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,
		0,0,0,1,165,1,0,0,0,3,172,1,0,0,0,5,177,1,0,0,0,7,183,1,0,0,0,9,188,1,
		0,0,0,11,191,1,0,0,0,13,196,1,0,0,0,15,202,1,0,0,0,17,205,1,0,0,0,19,209,
		1,0,0,0,21,217,1,0,0,0,23,220,1,0,0,0,25,226,1,0,0,0,27,235,1,0,0,0,29,
		242,1,0,0,0,31,248,1,0,0,0,33,251,1,0,0,0,35,254,1,0,0,0,37,261,1,0,0,
		0,39,265,1,0,0,0,41,271,1,0,0,0,43,281,1,0,0,0,45,287,1,0,0,0,47,297,1,
		0,0,0,49,303,1,0,0,0,51,313,1,0,0,0,53,318,1,0,0,0,55,326,1,0,0,0,57,335,
		1,0,0,0,59,342,1,0,0,0,61,347,1,0,0,0,63,352,1,0,0,0,65,356,1,0,0,0,67,
		359,1,0,0,0,69,362,1,0,0,0,71,364,1,0,0,0,73,366,1,0,0,0,75,369,1,0,0,
		0,77,372,1,0,0,0,79,375,1,0,0,0,81,378,1,0,0,0,83,381,1,0,0,0,85,384,1,
		0,0,0,87,386,1,0,0,0,89,389,1,0,0,0,91,391,1,0,0,0,93,394,1,0,0,0,95,397,
		1,0,0,0,97,400,1,0,0,0,99,402,1,0,0,0,101,404,1,0,0,0,103,406,1,0,0,0,
		105,408,1,0,0,0,107,410,1,0,0,0,109,412,1,0,0,0,111,419,1,0,0,0,113,422,
		1,0,0,0,115,425,1,0,0,0,117,429,1,0,0,0,119,431,1,0,0,0,121,433,1,0,0,
		0,123,435,1,0,0,0,125,437,1,0,0,0,127,439,1,0,0,0,129,441,1,0,0,0,131,
		443,1,0,0,0,133,445,1,0,0,0,135,447,1,0,0,0,137,449,1,0,0,0,139,451,1,
		0,0,0,141,453,1,0,0,0,143,464,1,0,0,0,145,468,1,0,0,0,147,506,1,0,0,0,
		149,508,1,0,0,0,151,524,1,0,0,0,153,526,1,0,0,0,155,528,1,0,0,0,157,530,
		1,0,0,0,159,541,1,0,0,0,161,556,1,0,0,0,163,563,1,0,0,0,165,166,5,105,
		0,0,166,167,5,109,0,0,167,168,5,112,0,0,168,169,5,111,0,0,169,170,5,114,
		0,0,170,171,5,116,0,0,171,2,1,0,0,0,172,173,5,110,0,0,173,174,5,117,0,
		0,174,175,5,108,0,0,175,176,5,108,0,0,176,4,1,0,0,0,177,178,5,102,0,0,
		178,179,5,97,0,0,179,180,5,108,0,0,180,181,5,115,0,0,181,182,5,101,0,0,
		182,6,1,0,0,0,183,184,5,116,0,0,184,185,5,114,0,0,185,186,5,117,0,0,186,
		187,5,101,0,0,187,8,1,0,0,0,188,189,5,105,0,0,189,190,5,102,0,0,190,10,
		1,0,0,0,191,192,5,101,0,0,192,193,5,108,0,0,193,194,5,115,0,0,194,195,
		5,101,0,0,195,12,1,0,0,0,196,197,5,119,0,0,197,198,5,104,0,0,198,199,5,
		105,0,0,199,200,5,108,0,0,200,201,5,101,0,0,201,14,1,0,0,0,202,203,5,100,
		0,0,203,204,5,111,0,0,204,16,1,0,0,0,205,206,5,102,0,0,206,207,5,111,0,
		0,207,208,5,114,0,0,208,18,1,0,0,0,209,210,5,102,0,0,210,211,5,111,0,0,
		211,212,5,114,0,0,212,213,5,101,0,0,213,214,5,97,0,0,214,215,5,99,0,0,
		215,216,5,104,0,0,216,20,1,0,0,0,217,218,5,105,0,0,218,219,5,110,0,0,219,
		22,1,0,0,0,220,221,5,98,0,0,221,222,5,114,0,0,222,223,5,101,0,0,223,224,
		5,97,0,0,224,225,5,107,0,0,225,24,1,0,0,0,226,227,5,99,0,0,227,228,5,111,
		0,0,228,229,5,110,0,0,229,230,5,116,0,0,230,231,5,105,0,0,231,232,5,110,
		0,0,232,233,5,117,0,0,233,234,5,101,0,0,234,26,1,0,0,0,235,236,5,114,0,
		0,236,237,5,101,0,0,237,238,5,116,0,0,238,239,5,117,0,0,239,240,5,114,
		0,0,240,241,5,110,0,0,241,28,1,0,0,0,242,243,5,121,0,0,243,244,5,105,0,
		0,244,245,5,101,0,0,245,246,5,108,0,0,246,247,5,100,0,0,247,30,1,0,0,0,
		248,249,5,97,0,0,249,250,5,115,0,0,250,32,1,0,0,0,251,252,5,105,0,0,252,
		253,5,115,0,0,253,34,1,0,0,0,254,255,5,116,0,0,255,256,5,121,0,0,256,257,
		5,112,0,0,257,258,5,101,0,0,258,259,5,111,0,0,259,260,5,102,0,0,260,36,
		1,0,0,0,261,262,5,110,0,0,262,263,5,101,0,0,263,264,5,119,0,0,264,38,1,
		0,0,0,265,266,5,112,0,0,266,267,5,97,0,0,267,268,5,114,0,0,268,269,5,97,
		0,0,269,270,5,108,0,0,270,40,1,0,0,0,271,272,5,112,0,0,272,273,5,97,0,
		0,273,274,5,114,0,0,274,275,5,97,0,0,275,276,5,108,0,0,276,277,5,95,0,
		0,277,278,5,97,0,0,278,279,5,108,0,0,279,280,5,108,0,0,280,42,1,0,0,0,
		281,282,5,100,0,0,282,283,5,101,0,0,283,284,5,102,0,0,284,285,5,101,0,
		0,285,286,5,114,0,0,286,44,1,0,0,0,287,288,5,110,0,0,288,289,5,97,0,0,
		289,290,5,109,0,0,290,291,5,101,0,0,291,292,5,115,0,0,292,293,5,112,0,
		0,293,294,5,97,0,0,294,295,5,99,0,0,295,296,5,101,0,0,296,46,1,0,0,0,297,
		298,5,99,0,0,298,299,5,108,0,0,299,300,5,97,0,0,300,301,5,115,0,0,301,
		302,5,115,0,0,302,48,1,0,0,0,303,304,5,105,0,0,304,305,5,110,0,0,305,306,
		5,116,0,0,306,307,5,101,0,0,307,308,5,114,0,0,308,309,5,102,0,0,309,310,
		5,97,0,0,310,311,5,99,0,0,311,312,5,101,0,0,312,50,1,0,0,0,313,314,5,101,
		0,0,314,315,5,110,0,0,315,316,5,117,0,0,316,317,5,109,0,0,317,52,1,0,0,
		0,318,319,5,118,0,0,319,320,5,105,0,0,320,321,5,114,0,0,321,322,5,116,
		0,0,322,323,5,117,0,0,323,324,5,97,0,0,324,325,5,108,0,0,325,54,1,0,0,
		0,326,327,5,111,0,0,327,328,5,118,0,0,328,329,5,101,0,0,329,330,5,114,
		0,0,330,331,5,114,0,0,331,332,5,105,0,0,332,333,5,100,0,0,333,334,5,101,
		0,0,334,56,1,0,0,0,335,336,5,115,0,0,336,337,5,116,0,0,337,338,5,97,0,
		0,338,339,5,116,0,0,339,340,5,105,0,0,340,341,5,99,0,0,341,58,1,0,0,0,
		342,343,5,99,0,0,343,344,5,111,0,0,344,345,5,114,0,0,345,346,5,111,0,0,
		346,60,1,0,0,0,347,348,5,102,0,0,348,349,5,117,0,0,349,350,5,110,0,0,350,
		351,5,99,0,0,351,62,1,0,0,0,352,353,5,114,0,0,353,354,5,101,0,0,354,355,
		5,102,0,0,355,64,1,0,0,0,356,357,5,124,0,0,357,358,5,124,0,0,358,66,1,
		0,0,0,359,360,5,38,0,0,360,361,5,38,0,0,361,68,1,0,0,0,362,363,5,124,0,
		0,363,70,1,0,0,0,364,365,5,38,0,0,365,72,1,0,0,0,366,367,5,43,0,0,367,
		368,5,43,0,0,368,74,1,0,0,0,369,370,5,45,0,0,370,371,5,45,0,0,371,76,1,
		0,0,0,372,373,5,43,0,0,373,374,5,61,0,0,374,78,1,0,0,0,375,376,5,45,0,
		0,376,377,5,61,0,0,377,80,1,0,0,0,378,379,5,42,0,0,379,380,5,61,0,0,380,
		82,1,0,0,0,381,382,5,47,0,0,382,383,5,61,0,0,383,84,1,0,0,0,384,385,5,
		60,0,0,385,86,1,0,0,0,386,387,5,60,0,0,387,388,5,61,0,0,388,88,1,0,0,0,
		389,390,5,62,0,0,390,90,1,0,0,0,391,392,5,62,0,0,392,393,5,61,0,0,393,
		92,1,0,0,0,394,395,5,33,0,0,395,396,5,61,0,0,396,94,1,0,0,0,397,398,5,
		61,0,0,398,399,5,61,0,0,399,96,1,0,0,0,400,401,5,43,0,0,401,98,1,0,0,0,
		402,403,5,45,0,0,403,100,1,0,0,0,404,405,5,42,0,0,405,102,1,0,0,0,406,
		407,5,47,0,0,407,104,1,0,0,0,408,409,5,37,0,0,409,106,1,0,0,0,410,411,
		5,33,0,0,411,108,1,0,0,0,412,416,7,0,0,0,413,415,7,1,0,0,414,413,1,0,0,
		0,415,418,1,0,0,0,416,414,1,0,0,0,416,417,1,0,0,0,417,110,1,0,0,0,418,
		416,1,0,0,0,419,420,5,91,0,0,420,421,5,93,0,0,421,112,1,0,0,0,422,423,
		5,46,0,0,423,424,5,46,0,0,424,114,1,0,0,0,425,426,5,46,0,0,426,427,5,46,
		0,0,427,428,5,46,0,0,428,116,1,0,0,0,429,430,5,61,0,0,430,118,1,0,0,0,
		431,432,5,59,0,0,432,120,1,0,0,0,433,434,5,58,0,0,434,122,1,0,0,0,435,
		436,5,46,0,0,436,124,1,0,0,0,437,438,5,91,0,0,438,126,1,0,0,0,439,440,
		5,93,0,0,440,128,1,0,0,0,441,442,5,40,0,0,442,130,1,0,0,0,443,444,5,41,
		0,0,444,132,1,0,0,0,445,446,5,123,0,0,446,134,1,0,0,0,447,448,5,125,0,
		0,448,136,1,0,0,0,449,450,5,44,0,0,450,138,1,0,0,0,451,452,5,63,0,0,452,
		140,1,0,0,0,453,458,5,34,0,0,454,457,3,151,75,0,455,457,8,2,0,0,456,454,
		1,0,0,0,456,455,1,0,0,0,457,460,1,0,0,0,458,456,1,0,0,0,458,459,1,0,0,
		0,459,461,1,0,0,0,460,458,1,0,0,0,461,462,5,34,0,0,462,142,1,0,0,0,463,
		465,3,153,76,0,464,463,1,0,0,0,465,466,1,0,0,0,466,464,1,0,0,0,466,467,
		1,0,0,0,467,144,1,0,0,0,468,469,5,48,0,0,469,471,7,3,0,0,470,472,3,155,
		77,0,471,470,1,0,0,0,472,473,1,0,0,0,473,471,1,0,0,0,473,474,1,0,0,0,474,
		146,1,0,0,0,475,477,3,153,76,0,476,475,1,0,0,0,477,478,1,0,0,0,478,476,
		1,0,0,0,478,479,1,0,0,0,479,480,1,0,0,0,480,484,5,46,0,0,481,483,3,153,
		76,0,482,481,1,0,0,0,483,486,1,0,0,0,484,482,1,0,0,0,484,485,1,0,0,0,485,
		488,1,0,0,0,486,484,1,0,0,0,487,489,3,149,74,0,488,487,1,0,0,0,488,489,
		1,0,0,0,489,507,1,0,0,0,490,492,5,46,0,0,491,493,3,153,76,0,492,491,1,
		0,0,0,493,494,1,0,0,0,494,492,1,0,0,0,494,495,1,0,0,0,495,497,1,0,0,0,
		496,498,3,149,74,0,497,496,1,0,0,0,497,498,1,0,0,0,498,507,1,0,0,0,499,
		501,3,153,76,0,500,499,1,0,0,0,501,502,1,0,0,0,502,500,1,0,0,0,502,503,
		1,0,0,0,503,504,1,0,0,0,504,505,3,149,74,0,505,507,1,0,0,0,506,476,1,0,
		0,0,506,490,1,0,0,0,506,500,1,0,0,0,507,148,1,0,0,0,508,510,7,4,0,0,509,
		511,7,5,0,0,510,509,1,0,0,0,510,511,1,0,0,0,511,513,1,0,0,0,512,514,3,
		153,76,0,513,512,1,0,0,0,514,515,1,0,0,0,515,513,1,0,0,0,515,516,1,0,0,
		0,516,150,1,0,0,0,517,518,5,92,0,0,518,525,7,6,0,0,519,521,5,92,0,0,520,
		522,5,13,0,0,521,520,1,0,0,0,521,522,1,0,0,0,522,523,1,0,0,0,523,525,5,
		10,0,0,524,517,1,0,0,0,524,519,1,0,0,0,525,152,1,0,0,0,526,527,7,7,0,0,
		527,154,1,0,0,0,528,529,7,8,0,0,529,156,1,0,0,0,530,531,5,47,0,0,531,532,
		5,47,0,0,532,536,1,0,0,0,533,535,8,9,0,0,534,533,1,0,0,0,535,538,1,0,0,
		0,536,534,1,0,0,0,536,537,1,0,0,0,537,539,1,0,0,0,538,536,1,0,0,0,539,
		540,6,78,0,0,540,158,1,0,0,0,541,542,5,47,0,0,542,543,5,42,0,0,543,547,
		1,0,0,0,544,546,9,0,0,0,545,544,1,0,0,0,546,549,1,0,0,0,547,548,1,0,0,
		0,547,545,1,0,0,0,548,550,1,0,0,0,549,547,1,0,0,0,550,551,5,42,0,0,551,
		552,5,47,0,0,552,553,1,0,0,0,553,554,6,79,0,0,554,160,1,0,0,0,555,557,
		7,10,0,0,556,555,1,0,0,0,557,558,1,0,0,0,558,556,1,0,0,0,558,559,1,0,0,
		0,559,560,1,0,0,0,560,561,6,80,0,0,561,162,1,0,0,0,562,564,7,9,0,0,563,
		562,1,0,0,0,564,565,1,0,0,0,565,563,1,0,0,0,565,566,1,0,0,0,566,567,1,
		0,0,0,567,568,6,81,0,0,568,164,1,0,0,0,21,0,416,456,458,466,473,478,484,
		488,494,497,502,506,510,515,521,524,536,547,558,565,1,0,1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
